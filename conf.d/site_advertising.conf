upstream site_advertising {
    server site_advertising:8000 fail_timeout=0;
}

server {
    listen 80;
   lua_need_request_body on;
   set $response_body '';
  body_filter_by_lua_block {
    -- arg[1] contains a chunk of response content
    local resp_body = string.sub(ngx.arg[1], 1, 1000)
    ngx.ctx.buffered = string.sub((ngx.ctx.buffered or "") .. resp_body, 1, 1000)
    -- arg[2] is true if this is the last chunk
    if ngx.arg[2] then
      ngx.var.response_body = ngx.ctx.buffered
    end;
  }


  set_by_lua $req_header 'json = require("lunajson")
                               return json.encode(ngx.req.get_headers())
                               ' ;
  set_by_lua $resp_header 'json = require("lunajson")
                               return json.encode(ngx.req.get_headers())
                               ' ;
  set_by_lua $req_body 'json = require("lunajson")
                        return json.encode(ngx.req.get_body_data())
                        ' ;

  set_by_lua $req_file_name '
                        return ngx.req.get_body_file()
                        ' ;

   location / {

#    content_by_lua_block {
#
#
#   }
    proxy_pass http://site_advertising;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
#     log_by_lua_file lua/request_logger.lua;
    }
