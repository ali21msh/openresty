upstream cdn {
    server cdn:8000;
}

server {
    listen 80;
    # This will make sure that any changes to the lua code file is picked up
  # without reloading or restarting nginx



  set $response_body '';

  body_filter_by_lua_block {
    -- arg[1] contains a chunk of response content
    local resp_body = string.sub(ngx.arg[1], 1, 1000)
    ngx.ctx.buffered = string.sub((ngx.ctx.buffered or "") .. resp_body, 1, 1000)
    -- arg[2] is true if this is the last chunk
    if ngx.arg[2] then
      ngx.var.response_body = ngx.ctx.buffered
    end;
  }

   location / {
   lua_need_request_body on;
   content_by_lua_block {
    local req_body = ngx.req.get_body_data()
    ngx.var.request_body = req_body
  }
    proxy_pass http://cdn;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
    log_by_lua_file lua/request_logger.lua;


#     log_by_lua_block {
#      ngx.log(ngx.CRIT, "See if this message comes");
#     }
    }
}